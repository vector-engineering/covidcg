# coding: utf-8

"""Workflow for building phylogenetic tree of lineages

Code is derived from CoVizu:
  * https://filogeneti.ca/covizu/
  * https://github.com/PoonLab/covizu

Please find the attached license at LICENSE_COVIZU

Author: Albert Chen - Vector Engineering Team (chena@broadinstitute.org)
"""

import datetime
import os

from phylotree.scripts.representative_seqs import get_representative_seqs
from phylotree.scripts.build_graph_table import build_graph_table

data_folder = os.path.join("..", config["data_folder"])
static_data_folder = os.path.join("..", config["static_data_folder"])

# Get today's date in ISO format (YYYY-MM-DD)
today_str = datetime.date.today().isoformat()

rule get_representative_sequences:
    input:
        case_data = os.path.join(data_folder, "case_data.json"),
        metadata_map = os.path.join(data_folder, "metadata_map.json"),
        location_map = os.path.join(data_folder, "location_map.json"),
        ref_seq = os.path.join(static_data_folder, "reference.json"),
    output:
        representatives = os.path.join(data_folder, "lineage_representatives.fa"),
        datefile = os.path.join(data_folder, "lineage_representative_dates.csv"),
        table = os.path.join(data_folder, 'lineage_representative_table.csv')
    run:
        get_representative_seqs(
            input.case_data, input.metadata_map, input.location_map, input.ref_seq, 
            output.representatives, output.datefile, output.table
        )


rule fasttree:
    input:
        representatives = rules.get_representative_sequences.output.representatives,
    output:
        newick_tree = os.path.join(data_folder, "lineage_representatives.nwk")
    shell:
        """
        FastTreeMP -nt -quote -seed 1 < {input.representatives} > {output.newick_tree}
        """

rule clean_newick_tree:
    input: 
        newick_in = rules.fasttree.output.newick_tree
    output: 
        newick_out = os.path.join(data_folder, "lineage_representatives_cleaned.nwk")
    run:
        with open(input.newick_in, 'r') as fp:
            nwk = fp.read()
        with open(output.newick_out, 'w') as fp:
            fp.write(nwk.replace(' ', ''))

rule treetime:
    input:
        newick_tree = rules.clean_newick_tree.output.newick_out,
        alignment = rules.get_representative_sequences.output.representatives,
        datefile = rules.get_representative_sequences.output.datefile,
    params:
        output_dir = os.path.join(data_folder, 'lineage_treetime')
    output:
        nexus_file = os.path.join(data_folder, 'lineage_treetime', 'timetree.nexus'),
        tree_dates = os.path.join(data_folder, 'lineage_treetime', 'dates.tsv'),
    shell:
        """
        treetime --tree {input.newick_tree} --aln {input.alignment} --dates {input.datefile} --outdir {params.output_dir} --verbose 1 --plot-rtt none --clock-filter 0 
        """


rule build_phylotree_graph:
    input:
        case_data = os.path.join(data_folder, "case_data.json"),
        nexus_file = rules.treetime.output.nexus_file,
        tree_dates = rules.treetime.output.tree_dates,
        representative_table = rules.get_representative_sequences.output.table
    output:
        graph_table = os.path.join(data_folder, 'lineage_tree_graph.json')
    run:
        build_graph_table(
            input.case_data,
            input.nexus_file,
            input.tree_dates,
            input.representative_table,
            output.graph_table
        )