{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "A basic line chart example.",
  "width": 1000,
  "height": 350,
  "padding": 5,

  "signals": [
    {"name": "group_title", "value": "Lineages"},
    {"name": "days_ago", "value": 90},
    {"name": "min_date", "update": "now() - (days_ago * 24 * 60 * 60 * 1000)"},

    {"name": "legend_width", "value": 60},
    {"name": "facet_width", "update": "width - legend_width"},
    {"name": "facet_x", "update": "legend_width"},

    {"name": "subplot_hpadding", "value": 90},
    {"name": "subplot_width", "update": "(facet_width - (subplot_hpadding * 2.4)) / 3"},
    {"name": "subplot_range_x", "update": "[0, subplot_width]"},
    {"name": "subplot_vpadding", "value": 100},
    {"name": "subplot_height", "update": "(height - subplot_vpadding) / 2"},
    {"name": "subplot_range_y", "update": "[subplot_height, 0]"},
    {
      "name": "x_adjusted",
      "on": [
        {
          "events": "mousemove",
          "update": "x() - facet_x"
        }
      ]
    },
    {
      "name": "cur_mouse_col",
      "on": [
        {
          "events": "mousemove",
          "update": "if(x_adjusted >= 0 && x_adjusted <= subplot_width, 1, if(x_adjusted >= (subplot_width + (subplot_hpadding)) && (x_adjusted <= (subplot_width * 2) + (subplot_hpadding)), 2, if(x_adjusted >= (subplot_width * 2) + (subplot_hpadding * 2) && x_adjusted <= ((subplot_width * 3) + (subplot_hpadding * 2)), 3, -1)))"
        }
      ]
    },
    {
      "name": "cur_mouse_row",
      "on": [
        {
          "events": "mousemove",
          "update": "if(y() >= 0 && y() <= subplot_height, 1, if(y() >= subplot_height + subplot_vpadding && y() <= (subplot_height * 2) + subplot_vpadding, 2, -1))"
        }
      ]
    },
    {
      "name": "cur_region",
      "update": "if(cur_mouse_row == -1 || cur_mouse_col == -1, -1, ((cur_mouse_row - 1) * 3) + cur_mouse_col)"
    },
    {
      "name": "cur_mouse_x",
      "on": [
        {
          "events": "mousemove",
          "update": "if(cur_mouse_col == -1, null, x_adjusted - ((cur_mouse_col - 1) * subplot_width) - ((cur_mouse_col - 1) * subplot_hpadding))"
        }
      ]
    },
    {
      "name": "cur_mouse_date",
      "update": "if(cur_mouse_col == -1, null, invert('dateX', cur_mouse_x))"
    },
    {
      "name": "cur_mouse_y",
      "on": [
        {
          "events": "mousemove",
          "update": "if(cur_mouse_row > -1, y() - ((cur_mouse_row - 1) * (subplot_height + subplot_vpadding)), null)"
        }
      ]
    },
    {
      "name": "cur_mouse_percent",
      "update": "if(cur_region > -1, (1 - (cur_mouse_y / subplot_height)) * data('cur_max_percent')[0]['percent'], null)"
    },
    {
      "name": "time_sensitivity",
      "update": "3.5 * 24 * 60 * 60 * 1000"
    },
    {
      "name": "percent_sensitivity_factor",
      "value": 10
    },
    {
      "name": "percent_sensitivity",
      "update": "if(cur_region > -1, data('cur_max_percent')[0]['percent'] / percent_sensitivity_factor, null)"
    },
    {
      "name": "legend_hover",
      "on": [
        {
          "events": "@legend_symbol:mouseover",
          "update": "datum.value"
        },
        {
          "events": "@legend_label:mouseover",
          "update": "datum.value"
        }
      ]
    },
    {
      "name": "legend_clear",
      "value": true,
      "on": [
        {
          "events": "@legend_symbol:mouseout",
          "update": "true",
          "force": true
        },
        {
          "events": "@legend_label:mouseout",
          "update": "true",
          "force": true
        }
      ]
    }
  ],

  "data": [
    {
      "name": "group_reg",
      "url": "https://storage.googleapis.com/ve-public/surveillance/group_regression.json"
    },
    {
      "name": "valid_groups",
      "source": "group_reg",
      "transform": [
        {
          "type": "filter",
          "expr": "datum.r > 0.5 && datum.counts > 10 && datum.max_percent > 0.05"
        },
        {
          "type": "formula",
          "expr": "datum.region + ':' + datum.group",
          "as": "region_group"
        },
        {
          "type": "collect",
          "sort": {
            "field": ["group"],
            "order": ["ascending"]
          }
        }
      ]
    },
    {
      "name": "group_counts",
      "url": "https://storage.googleapis.com/ve-public/surveillance/group_counts.json",
      "format": {"parse": {"collection_week": "date"}},
      "transform": [
        {
          "type": "formula",
          "expr": "datum.region + ':' + datum.group",
          "as": "region_group"
        },
        {
          "type": "formula",
          "expr": "if(indata('valid_groups', 'region_group', datum.region_group), true, false)",
          "as": "valid"
        },
        {
          "type": "collect",
          "sort": {
            "field": ["region", "group", "collection_week"],
            "order": ["ascending", "ascending", "ascending"]
          }
        }
      ]
    },
    {
      "name": "max_percents",
      "source": "group_counts",
      "transform": [
        {
          "type": "aggregate",
          "groupby": ["region"],
          "fields": ["percent"],
          "ops": ["max"],
          "as": ["percent"]
        },
        {
          "type": "identifier",
          "as": "index"
        }
      ]
    },
    {
      "name": "cur_max_percent",
      "source": "max_percents",
      "transform": [
        {
          "type": "filter",
          "expr": "datum.index == cur_region"
        }
      ]
    },
    {
      "name": "tooltip_group",
      "source": "group_counts",
      "transform": [
        {
          "type": "filter",
          "expr": "cur_region > -1 && datum.region == data('cur_max_percent')[0]['region'] && abs(datum.collection_week - time(cur_mouse_date)) <= time_sensitivity && abs(datum.percent - cur_mouse_percent) <= percent_sensitivity"
        },
        {
          "type": "project",
          "fields": ["group"],
          "as": ["group"]
        }
      ]
    },
    {
      "name": "hover_legend",
      "values": [],
      "on": [
        {"trigger": "legend_hover", "insert": "legend_hover" },
        {"trigger": "legend_clear", "remove": true}
      ],
      "transform": [
        {
          "type": "project",
          "fields": ["data"],
          "as": ["group"]
        }
      ]
    },
    {
      "name": "all_hover",
      "source": ["tooltip_group", "hover_legend"]
    }
  ],

  "scales": [
    {
      "name": "dateX",
      "type": "time",
      "domain": {"data": "group_counts", "field": "collection_week"},
      "range": {"signal": "subplot_range_x"}
    },
    {
      "name": "group_color",
      "type": "ordinal",
      "domain": {"data": "valid_groups", "field": "group"},
      "range": {"scheme": "tableau20"}
    }
  ],

  "marks": [
    {
      "type": "group",
      "from": {"data": "valid_groups"},
      "encode": {
        "update": {
          "x": {"value": 0},
          "y": {"value": 0},
          "width": {"signal": "legend_width"},
          "height": {"signal": "height"}
        }
      },
      "legends": [
        {
          "orient": "left",
          "offset": 5,
          "stroke": "group_color",
          "fillColor": "#fff",
          "padding": 5,
          "labelFontSize": 12,
          "titleFontSize": 14,
          "title": {"signal": "group_title"},
          "symbolType": "stroke",
          "columns": 1,
          "symbolLimit": 30,
          "encode": {
            "symbols": {
              "name": "legend_symbol",
              "interactive": true,
              "update": {
                "size": {"value": 200},
                "strokeWidth": {"value": 3},
                "opacity": [
                  {
                    "test": "!length(data('all_hover')) || indata('all_hover', 'group', datum.value)",
                    "value": 1.0
                  },
                  {"value": 0.3}
                ]
              }
            },
            "labels": {
              "name": "legend_label",
              "interactive": true,
              "update": {
                "opacity": [
                  {
                    "test": "!length(data('all_hover')) || indata('all_hover', 'group', datum.value)",
                    "value": 1.0
                  },
                  {"value": 0.3}
                ]
              }
            }
          }
        }
      ]
    },
    {
      "name": "facets",
      "type": "group",
      "encode": {
        "update": {
          "x": {"signal": "facet_x"},
          "y": {"value": 0},
          "width": {"signal": "facet_width"},
          "height": {"signal": "height"}
        }
      },
      "signals": [
        {"name": "width", "update": "facet_width"},
        {"name": "height", "update": "height"}
      ],
      
      "layout": {
        "columns": 3,
        "padding": {
          "row": {"signal": "subplot_vpadding"},
          "column": {"signal": "subplot_hpadding"}
        },
        "bounds": "flush"
      },

      "marks": [
        {
          "name": "region_grid",
          "type": "group",
          "encode": {
          "update": {
            "x": {"value": 0},
            "width": {"signal": "subplot_width"},
            "height": {"signal": "subplot_height"}
          } 
          },
          "signals": [
            {"name": "width", "update": "subplot_width"},
            {"name": "height", "update": "subplot_height"}
          ],
          "from": {
            "facet": {
              "name": "group_per_region",
              "data": "group_counts",
              "groupby": "region"
            }
          },

          "title": {
            "text": {"signal": "parent.region"},
            "anchor": "start",
            "frame": "group"
          },
          
          "scales": [
            {
              "name": "percentY",
              "type": "linear",
              "domain": {"data": "group_per_region", "field": "percent"},
              "range": {"signal": "subplot_range_y"}
            }
          ],
          "axes": [
            {
              "scale": "dateX",
              "orient": "bottom",
              "format": "%m-%d",
              "tickCount": "week",
              "grid": false,
              "gridColor": "#DDD",
              "labelAngle": 310,
              "labelAlign": "right",
              "labelBaseline": "middle",
              "labelPadding": 5,
              "labelFontSize": 12,
              "title": "Collection Date"
            },
            {
              "scale": "percentY",
              "orient": "left",
              "format": "%",
              "title": "Percent Sequences",
              "grid": true,
              "gridColor": "#EEE"
            }
          ],
          "marks": [
            {
              "type": "group",
              "from": {
                "facet": {
                  "name": "group_date",
                  "data": "group_per_region",
                  "groupby": "group"
                }
              },
              "signals": [
              ],
              "data": [
                {
                  "name": "valid_group_date",
                  "source": "group_date",
                  "transform": [
                    {
                      "type": "filter",
                      "expr": "datum.valid || indata('valid_groups', 'group', datum.group)"
                    }
                  ]
                },
                {
                  "name": "invalid_group_date",
                  "source": "group_date",
                  "transform": [
                    {
                      "type": "filter",
                      "expr": "!datum.valid && !indata('valid_groups', 'group', datum.group)"
                    }
                  ]
                },
                {
                  "name": "max_date",
                  "source": "group_date",
                  "transform": [
                    {
                      "type": "aggregate",
                      "groupby": ["group"],
                      "fields": ["collection_week"],
                      "ops": ["max"],
                      "as": ["max_date"]
                    }
                  ]
                },
                {
                  "name": "label",
                  "source": "group_date",
                  "transform": [
                    {
                      "type": "filter",
                      "expr": "datum.collection_week == data('max_date')[0]['max_date'] && indata('all_hover', 'group', datum.group)"
                    }
                  ]
                }
              ],
              "marks": [
                {
                  "type": "line",
                  "from": {"data": "valid_group_date"},
                  "encode": {
                    "update": {
                      "x": {"scale": "dateX", "field": "collection_week"},
                      "y": {"scale": "percentY", "field": "percent"},
                      "stroke": {"scale": "group_color", "field": "group"},
                      "strokeWidth": {"value": 2},
                      "strokeOpacity": [
                        {
                          "test": "!length(data('all_hover')) || indata('all_hover', 'group', datum.group)",
                          "value": 1.0
                        },
                        {"value": 0.3}
                      ],
                      "zindex": {"value": 2}
                    }
                  }
                },
                {
                  "type": "line",
                  "from": {"data": "invalid_group_date"},
                  "encode": {
                    "update": {
                      "x": {"scale": "dateX", "field": "collection_week"},
                      "y": {"scale": "percentY", "field": "percent"},
                      "stroke": {"value": "#aaa"},
                      "strokeWidth": [
                        {
                          "test": "length(data('all_hover')) && indata('all_hover', 'group', datum.group)",
                          "value": 1.5
                        },
                        {"value": 1.0}
                      ],
                      "strokeOpacity": [
                        {
                          "test": "length(data('all_hover')) && indata('all_hover', 'group', datum.group)",
                          "value": 0.8
                        },
                        {"value": 0.3}
                      ],
                      "zindex": {"value": 1}
                    }
                  }
                },
                {
                  "type": "text",
                  "from": {"data": "label"},
                  "encode": {
                    "update": {
                      "x": {"scale": "dateX", "field": "collection_week", "offset": 3},
                      "y": {"scale": "percentY", "field": "percent"},
                      "text": {"field": "group"},
                      "fill": [
                        {
                          "test": "!indata('valid_groups', 'group', datum.group)",
                          "value": "#aaa"
                        },
                        {"scale": "group_color", "field": "group"}
                      ],
                      "fontSize": {"value": 10},
                      "fontWeight": {"value": "500"},
                      "baseline": {"value": "middle"}
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "group",
      "encode": {
        "update": {
          "x": {"value": 900},
          "y": {"value": 0},
          "width": {"value": 100},
          "height": {"signal": "height"}
        }
      }
    }
  ]
}