{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "An example of Cartesian layouts for a node-link diagram of hierarchical data.",
  "width": 200,
  "height": 100,
  "padding": 5,


  "data": [
    {
      "name": "source",
      "url": "https://storage.googleapis.com/ve-public/lineage_tree_graph_v2.json",
      "format": {
        "parse": {
          "date": "date",
          "date_min": "date",
          "date_max": "date"
        }
      },
      "transform": [
        {
          "type": "joinaggregate",
          "fields": ["date", "date"],
          "ops": ["min", "max"],
          "as": ["x_min", "x_max"]
        },
        {
          "type": "formula",
          "expr": "((datum.date - datum.x_min) / (datum.x_max - datum.x_min)) * (width - 50)",
          "as": "x"
        }
      ]
    },
    {
      "name": "tree",
      "source": "source",
      "transform": [
        {
          "type": "stratify",
          "key": "name",
          "parentKey": "parent"
        },
        {
          "type": "tree",
          "method": "cluster",
          "size": [{"signal": "plotHeight"}, {"signal": "width - 190"}],
          "separation": false,
          "as": [
            "y",
            "_x",
            "depth",
            "children"
          ]
        }
      ]
    },
    {
      "name": "links",
      "source": "tree",
      "transform": [
        { "type": "treelinks" },
        {
          "type": "linkpath",
          "orient": "horizontal",
          "shape": "orthogonal"
        }
      ]
    },
    {
      "name": "selected",
      "values": [],
      "on": [
        { "trigger": "nodeClick", "toggle": "nodeClick" }
      ]
    },
    {
      "name": "tips",
      "source": "tree",
      "transform": [
        {
          "type": "filter",
          "expr": "datum.leaf"
        },
        {
          "type": "collect",
          "sort": {"field": "region_most_common"}
        }
      ]
    }
  ],

  "signals": [
    {
      "name": "plotHeight",
      "value": 12000
    },
    {
      "name": "colorScale",
      "value": "colorRegion"
    },
    {
      "name": "colorField",
      "update": "{'colorRegion': 'region_most_common', 'colorLatest': 'date_max', 'colorNumSequences': 'num_seqs'}[colorScale]"
    },
    {
      "name": "xRange",
      "update": "[0, width - 50]"
    },
    {
      "name": "clear",
      "value": true,
      "on": [
        {
          "events": "mouseup[!event.item]",
          "update": "true",
          "force": true
        }
      ]
    },
    {
      "name": "shift",
      "value": false,
      "on": [
        {
          "events": "mousedown",
          "update": "event.shiftKey",
          "force": true
        }
      ]
    },
    {
      "name": "edgeClick",
      "value": null,
      "on": [
        {
          "events": "@treePath:mousedown!",
          "update": "datum.target.name",
          "force": true
        }
      ]
    },
    {
      "name": "nodeClick",
      "value": null,
      "on": [
        {
          "events": "@treeNode:mousedown!",
          "update": "{ 'lineage': datum.lineage }",
          "force": true
        },
        {
          "events": "@treeLabel:mousedown!",
          "update": "{ 'lineage': datum.lineage }",
          "force": true
        }
      ]
    },
    {
      "name": "tipHover",
      "value": null,
      "on": [
        {
          "events": "@treeNode:mouseover!",
          "update": "datum.lineage",
          "force": true
        },
        {
          "events": "@treeLabel:mouseover!",
          "update": "datum.lineage",
          "force": true
        }
      ]
    },
    {
      "name": "latestDomain",
      "update": "[1576368000000, now()]"
    },
    {
      "name": "numSequencesDomain",
      "update": "[1, 200000]"
    }
  ],

  "scales": [
    {
      "name": "num_seqs_stroke_width",
      "type": "log",
      "base": 2,
      "range": [2.5, 6],
      "domain": [100, 100000]
    },
    {
      "name": "date_x",
      "type": "time",
      "range": {"signal": "xRange"},
      "domain": {"data": "source", "field": "date"}
    },
    {
      "name": "colorRegion",
      "type": "ordinal",
      "range": { 
        "scheme": "tableau10"
      },
      "domain": { "data": "tips", "field": {"signal": "colorField"}}
    },
    {
      "name": "colorLatest",
      "type": "linear",
      "range": {"scheme": "viridis"},
      "domain": {"signal": "latestDomain"}
    },
    {
      "name": "colorNumSequences",
      "type": "log",
      "base": 10,
      "range": {"scheme": "inferno"},
      "domain": {"signal": "numSequencesDomain"}
    }
  ],

  "marks": [
    {
      "name": "treePath",
      "type": "path",
      "from": {"data": "links"},
      "encode": {
        "enter": {
          "path": {"field": "path"},
          "stroke": {"value": "#ccc"},
          "strokeWidth": {
            "scale": "num_seqs_stroke_width",
            "field": "target.num_seqs"
          }
        },
        "update": {
          "tooltip": {
            "signal": "{'# Sequences': datum.target.num_seqs}"
          }
        }
      }
    },
    {
      "name": "treeNode",
      "type": "rect",
      "from": {"data": "tips"},
      "encode": {
        "enter": {
          "height": {"value": 6},
          "x": {"field": "date_min", "scale": "date_x"},
          "x2": {"field": "date_max", "scale": "date_x"},
          "yc": {"field": "y"},
          "stroke": {"value": "#FF0000"}
        },
        "update": {
          "fill": {"field": {"signal": "colorField"}, "scale": {"signal": "colorScale"}},
          "strokeWidth": [
            {
              "test": "indata('selected', 'lineage', datum.lineage)",
              "value": 1
            },
            { "value": 0 }
          ],
          "opacity": [
            {
              "test": "indata('selected', 'lineage', datum.lineage)",
              "value": 0.5
            },
            { "value": 1.0 }
          ],
          "tooltip": {
            "signal": "{title: datum.lineage, '# Sequences': datum.num_seqs, 'Earliest sample': utcFormat(datum.date_min, '%Y-%m-%d'), 'Most recent sample': utcFormat(datum.date_max, '%Y-%m-%d'), 'Most counts in': datum.region_most_common}"
          }
        }
      }
    },
    {
      "name": "treeLabel",
      "type": "text",
      "from": {"data": "tips"},
      "encode": {
        "enter": {
          "x": {"field": "date_max", "scale": "date_x"},
          "dx": {"value": 5},
          "y": {"field": "y"},
          "text": {"field": "lineage"},
          "fontSize": {"value": 9},
          "baseline": {"value": "middle"}
        },
        "update": {
          "fontWeight": [
            {
              "test": "indata('selected', 'lineage', datum.lineage)",
              "value": "bold"
            },
            {"value": "normal"}
          ],
          "tooltip": {
            "signal": "{title: datum.lineage, '# Sequences': datum.num_seqs, 'Earliest sample': utcFormat(datum.date_min, '%Y-%m-%d'), 'Most recent sample': utcFormat(datum.date_max, '%Y-%m-%d'), 'Most counts in': datum.region_most_common}"
          }
        }
      }
    }
  ]
}
