{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "A basic bar chart example, with value labels shown upon mouse hover.",
  "width": 700,
  "height": 300,
  "padding": 5,

  "signals": [
    { "name": "entropyPlotHeight", "value": 120 },
    { "name": "entropyPlotYRange", "update": "[entropyPlotHeight, 0]" },

    { "name": "domainPlotHeight", "value": 60 },
    { "name": "domainPlotYRange", "update": "[domainPlotHeight, 0]" },
    { "name": "domainPlotY", "update": "entropyPlotHeight + 40" },

    { "name": "coveragePlotHeight", "value": 40 },
    { "name": "coveragePlotYRange", "update": "[coveragePlotHeight, 0]" },
    {
      "name": "coveragePlotY",
      "update": "domainPlotY + domainPlotHeight + 30"
    },

    { "name": "yMode", "value": "percentages" },
    { "name": "yScaleExponent", "value": 1.0 },
    { "name": "totalSequences", "value": 474 },
    { "name": "posField", "value": 1 },
    {
      "name": "rectWidth",
      "update": "invert('xDetail', 3)"
    },
    { "name": "xRange", "value": [0, 580] },
    { "name": "xLabel", "value": "F Gene (AA)" },
    { "name": "yLabel", "value": "# Mutations" },
    { "name": "detailDomain" },
    {
      "name": "hoverGroup",
      "value": null,
      "on": [
        {
          "events": "@entropybars:mouseover!",
          "update": "{group: datum.mutation}"
        },
        {
          "events": "@entropybars:mouseout!",
          "update": "null"
        }
      ]
    },
    {
      "name": "clearMutation",
      "value": true,
      "on": [
        {
          "events": "mouseup[!event.item]",
          "update": "true",
          "force": true
        }
      ]
    },
    {
      "name": "shiftMutation",
      "value": false,
      "on": [
        {
          "events": "@entropybars:click",
          "update": "event.shiftKey",
          "force": true
        }
      ]
    },
    {
      "name": "clickedMutation",
      "value": null,
      "on": [
        {
          "events": "@entropybars:click",
          "update": "{group: datum.mutation}",
          "force": true
        }
      ]
    },
    {
      "name": "clearDomain",
      "value": true,
      "on": [{ "events": "window:mousedown", "update": "true", "force": true }]
    },
    {
      "name": "shiftDomain",
      "value": false,
      "on": [
        {
          "events": "@domain_rects:click",
          "update": "event.shiftKey",
          "force": true
        }
      ]
    },
    {
      "name": "clickedDomain",
      "value": null,
      "on": [
        {
          "events": "@domain_rects:click",
          "update": "{name: datum.name}",
          "force": true
        }
      ]
    }
  ],
  "data": [
    {
      "name": "table",
      "format": {
        "type": "json"
      },
      "values": [],
      "transform": [
        {
          "type": "formula",
          "expr": "datum.counts / totalSequences",
          "as": "percent"
        },
        {
          "type": "formula",
          "expr": "((yMode == 'counts') * datum.counts) + ((yMode == 'percentages') * datum.percent) + ((yMode == 'partial_adjusted') * datum.partial_adjusted)",
          "as": "y"
        }
      ]
    },
    {
      "name": "tableFiltered",
      "source": "table",
      "transform": [
        {
          "type": "filter",
          "expr": "isValid(detailDomain) ? datum.pos >= detailDomain[0] && datum.pos <= detailDomain[1] : datum"
        }
      ]
    },
    {
      "name": "selected",
      "values": [],
      "on": [
        { "trigger": "clearMutation", "remove": true },
        { "trigger": "!shiftMutation", "remove": true },
        {
          "trigger": "!shiftMutation && clickedMutation",
          "insert": "clickedMutation"
        },
        {
          "trigger": "shiftMutation && clickedMutation",
          "toggle": "clickedMutation"
        }
      ],
      "transform": [
        {
          "type": "formula",
          "expr": "parseInt(split(datum.group, '|')[1])",
          "as": "pos"
        },
        {
          "type": "lookup",
          "from": "table",
          "key": "mutation",
          "values": ["color"],
          "fields": ["group"],
          "as": ["color"]
        }
      ]
    },
    {
      "name": "domains",
      "format": {
        "type": "json"
      },
      "values": [],
      "transform": [
        {
          "type": "formula",
          "expr": "(datum.row > 0 ? -datum.row - (0.5 * datum.row) : datum.row) + 5",
          "as": "rowTop"
        },
        { "type": "formula", "expr": "(datum.rowTop - 1)", "as": "rowBottom" },
        {
          "type": "formula",
          "expr": "if(posField, datum.ranges[0][0], (datum.ranges[0][0] * 3 - 2) + xRange[0] - 1)",
          "as": "start"
        },
        {
          "type": "formula",
          "expr": "if(posField, datum.ranges[0][1], datum.start + (datum.ranges[0][1] - datum.ranges[0][0]) * 3 + 2)",
          "as": "end"
        },
        { "type": "filter", "expr": "datum.start < xRange[1]" },
        { "type": "filter", "expr": "indexof(lower(datum.name), 'all') == -1" }
      ]
    },
    {
      "name": "selectedDomains",
      "values": [],
      "on": [
        { "trigger": "clearDomain", "remove": true },
        { "trigger": "!shiftDomain", "remove": true },
        {
          "trigger": "!shiftDomain && clickedDomain",
          "insert": "clickedDomain"
        },
        { "trigger": "shiftDomain && clickedDomain", "toggle": "clickedDomain" }
      ]
    },
    {
      "name": "coverage",
      "values": [],
      "transform": [
        {
          "type": "formula",
          "expr": "datum.count / totalSequences",
          "as": "fraction"
        },
        {
          "type": "formula",
          "expr": "datum.fraction * 100",
          "as": "percent"
        }
      ]
    }
  ],

  "scales": [
    {
      "name": "xOverview",
      "type": "linear",
      "domain": { "signal": "xRange" },
      "range": "width",
      "padding": 0.05,
      "round": true,
      "zero": false,
      "clamp": true
    },
    {
      "name": "xDetail",
      "type": "linear",
      "domain": { "signal": "xRange" },
      "domainRaw": { "signal": "detailDomain" },
      "range": "width",
      "padding": 0.05,
      "round": true,
      "zero": false,
      "clamp": true
    }
  ],

  "axes": [],

  "marks": [
    {
      "name": "entropybarplot",
      "type": "group",
      "encode": {
        "update": {
          "x": { "value": 0 },
          "y": { "value": 0 },
          "width": { "signal": "width" },
          "height": { "signal": "entropyPlotHeight" }
        }
      },
      "scales": [
        {
          "name": "entropyYScale",
          "type": "pow",
          "exponent": { "signal": "yScaleExponent" },
          "domain": { "data": "tableFiltered", "field": "y" },
          "range": { "signal": "entropyPlotYRange" }
        }
      ],
      "axes": [
        {
          "orient": "bottom",
          "scale": "xDetail",
          "format": "d",
          "title": { "signal": "xLabel" }
        },
        {
          "orient": "left",
          "scale": "entropyYScale",
          "labelOverlap": "greedy",
          "tickCount": 5,
          "title": { "signal": "yLabel" }
        }
      ],
      "marks": [
        {
          "name": "entropymark",
          "type": "rule",
          "from": { "data": "selected" },
          "encode": {
            "enter": { "zindex": { "value": 1 } },
            "update": {
              "x": { "scale": "xDetail", "field": "pos" },
              "x2": { "scale": "xDetail", "field": "pos" },
              "y": { "value": 0 },
              "y2": { "signal": "entropyPlotHeight" },
              "stroke": { "field": "color" }
            }
          }
        },
        {
          "name": "entropybars",
          "type": "rect",
          "from": { "data": "tableFiltered" },
          "encode": {
            "enter": { "stroke": { "value": "#000" } },
            "update": {
              "xc": { "scale": "xDetail", "field": "pos" },
              "width": { "scale": "xDetail", "signal": "rectWidth" },
              "y": { "scale": "entropyYScale", "field": "y" },
              "y2": { "scale": "entropyYScale", "value": 0 },
              "tooltip": {
                "signal": "{title: datum.mutationName, 'Count': datum.counts, 'Percent': format(datum.percent, '.1%'), 'Percent (coverage adjusted)': format(datum.partial_adjusted, '.1%')}"
              },
              "fill": { "field": "color" },
              "strokeWidth": [
                {
                  "test": "hoverGroup && hoverGroup.group == datum.mutation",
                  "value": 1
                },
                { "value": 0 }
              ],
              "zindex": [
                {
                  "test": "hoverGroup && hoverGroup.group == datum.mutation",
                  "value": 3
                },
                { "value": 2 }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "domainPlot",
      "type": "group",
      "encode": {
        "enter": { "fill": { "value": "transparent" } },
        "update": {
          "x": { "value": 0 },
          "y": { "signal": "domainPlotY" },
          "width": { "signal": "width" },
          "height": { "signal": "domainPlotHeight" }
        }
      },
      "signals": [
        {
          "name": "brush",
          "value": 0,
          "on": [
            { "events": "@domainPlot:mousedown", "update": "[x(), x()]" },
            {
              "events": "[@domainPlot:mousedown, window:mouseup] > window:mousemove!",
              "update": "[brush[0], clamp(x(), 0, width)]"
            },
            {
              "events": { "signal": "delta" },
              "update": "clampRange([anchor[0] + delta, anchor[1] + delta], 0, width)"
            },
            {
              "events": "@domain_rects:mousedown",
              "update": "[scale('xOverview', datum.start), scale('xOverview', datum.end)]"
            }
          ]
        },
        {
          "name": "anchor",
          "value": null,
          "on": [{ "events": "@brush:mousedown", "update": "slice(brush)" }]
        },
        {
          "name": "xdown",
          "value": 0,
          "on": [{ "events": "@brush:mousedown", "update": "x()" }]
        },
        {
          "name": "delta",
          "value": 0,
          "on": [
            {
              "events": "[@brush:mousedown, window:mouseup] > window:mousemove!",
              "update": "x() - xdown"
            }
          ]
        },
        {
          "name": "detailDomain",
          "push": "outer",
          "on": [
            {
              "events": { "signal": "brush" },
              "update": "span(brush) ? invert('xOverview', brush) : null"
            }
          ]
        }
      ],
      "scales": [
        {
          "name": "domainYScale",
          "type": "linear",
          "domain": [0, 5],
          "range": { "signal": "domainPlotYRange" }
        }
      ],
      "axes": [{ "orient": "bottom", "scale": "xOverview" }],
      "marks": [
        {
          "name": "domain_rects",
          "type": "rect",
          "from": { "data": "domains" },
          "encode": {
            "enter": {
              "y": { "scale": "domainYScale", "field": "rowTop" },
              "y2": { "scale": "domainYScale", "field": "rowBottom" }
            },
            "update": {
              "x": { "scale": "xOverview", "field": "start" },
              "x2": { "scale": "xOverview", "field": "end" },
              "tooltip": {
                "signal": "{ title: datum.name, 'start': datum.start, 'end': datum.end }"
              },
              "strokeWidth": { "value": 0 },
              "fill": [
                {
                  "test": "indata('selectedDomains', 'name', datum.name)",
                  "value": "#34d5aa"
                },
                { "value": "#34d5eb" }
              ]
            },
            "hover": {
              "fill": { "value": "#34eeaa" },
              "strokeWidth": { "value": 1 },
              "stroke": { "value": "black" },
              "cursor": { "value": "pointer" }
            }
          }
        },
        {
          "name": "domain_labels",
          "type": "text",
          "from": { "data": "domain_rects" },
          "interactive": false,
          "encode": {
            "enter": {
              "y": { "field": "y" },
              "dy": { "field": "height", "mult": 0.5 },
              "align": { "value": "center" },
              "baseline": { "value": "middle" },
              "fill": { "value": "black" }
            },
            "update": {
              "x": { "field": "x" },
              "dx": { "field": "width", "mult": 0.5 },
              "tooltip": { "signal": "datum.tooltip" },
              "text": { "field": "datum.abbr" }
            }
          }
        },
        {
          "type": "rect",
          "name": "brush",
          "interactive": false,
          "encode": {
            "enter": {
              "y": { "value": 0 },
              "height": { "signal": "domainPlotHeight" },
              "fill": { "value": "#333" },
              "fillOpacity": { "value": 0.2 }
            },
            "update": {
              "x": { "signal": "brush[0]" },
              "x2": { "signal": "brush[1]" }
            }
          }
        },
        {
          "type": "rect",
          "interactive": false,
          "encode": {
            "enter": {
              "y": { "value": 0 },
              "height": { "signal": "domainPlotHeight" },
              "width": { "value": 0 },
              "fill": { "value": "firebrick" }
            },
            "update": { "x": { "signal": "brush[0]" } }
          }
        },
        {
          "type": "rect",
          "interactive": false,
          "encode": {
            "enter": {
              "y": { "value": 0 },
              "height": { "signal": "domainPlotHeight" },
              "width": { "value": 0 },
              "fill": { "value": "firebrick" }
            },
            "update": { "x": { "signal": "brush[1]" } }
          }
        }
      ]
    },
    {
      "name": "coveragePlot",
      "type": "group",
      "encode": {
        "enter": {
          "fill": { "value": "transparent" }
        },
        "update": {
          "x": { "value": 0 },
          "y": { "signal": "coveragePlotY" },
          "width": { "signal": "width" },
          "height": { "signal": "coveragePlotHeight" }
        }
      },
      "scales": [
        {
          "name": "coverageYScaleCounts",
          "domain": { "data": "coverage", "field": "count" },
          "range": { "signal": "coveragePlotYRange" },
          "nice": true,
          "zero": true
        },
        {
          "name": "coverageYScalePercent",
          "domain": { "data": "coverage", "field": "percent" },
          "range": { "signal": "coveragePlotYRange" },
          "nice": true,
          "zero": true
        }
      ],
      "axes": [
        {
          "orient": "bottom",
          "scale": "xDetail",
          "format": "d",
          "title": { "signal": "xLabel" }
        },
        {
          "orient": "left",
          "scale": "coverageYScalePercent",
          "labelOverlap": "greedy",
          "tickCount": 5,
          "title": ["Coverage", "(%)"]
        },
        {
          "orient": "right",
          "scale": "coverageYScaleCounts",
          "labelOverlap": "greedy",
          "tickCount": 5,
          "title": ["Coverage", "(Counts)"]
        }
      ],
      "marks": [
        {
          "name": "coverageArea",
          "type": "area",
          "from": { "data": "coverage" },
          "encode": {
            "enter": {
              "orient": { "value": "vertical" },
              "interpolate": { "value": "step-after" },
              "fill": { "value": "#0077bb" },
              "strokeOpacity": { "value": 0 },
              "fillOpacity": { "value": 1 }
            },
            "update": {
              "x": { "scale": "xDetail", "field": "ind" },
              "y": { "scale": "coverageYScaleCounts", "field": "count" },
              "y2": { "value": 0, "scale": "coverageYScaleCounts" },
              "opacity": { "value": 0.5 }
            },
            "hover": {
              "opacity": { "value": 0.4 }
            }
          }
        },
        {
          "name": "coverageLine",
          "type": "line",
          "from": { "data": "coverage" },
          "encode": {
            "enter": {
              "interpolate": { "value": "step-after" },
              "stroke": { "value": "#0077bb" }
            },
            "update": {
              "x": { "scale": "xDetail", "field": "ind" },
              "y": { "scale": "coverageYScaleCounts", "field": "count" }
            }
          }
        }
      ]
    }
  ]
}
