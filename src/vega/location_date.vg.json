{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "A basic line chart example.",
  "width": 700,
  "height": 300,
  "padding": 5,

  "signals": [
    {
      "name": "interpolate",
      "value": "step"
    },
    {
      "name": "hoverLocation",
      "value": null,
      "on": [
        {
          "events": "@locationlines:mouseover!",
          "update": "{location: datum.location}"
        },
        {
          "events": "@locationlines:mouseout!",
          "update": "null"
        }
      ]
    },
    {
      "name": "dateRangeStart",
      "value": 1575158400000,
      "comment": "Along with dateRangeEnd, these are hard limits on the dates shown. May need to update when we hit 2021. Dates are in milliseconds, unix epoch"
    },
    {
      "name": "dateRangeEnd",
      "value": 1609372800000
    },
    {
      "name": "dateBin",
      "value": 86400000,
      "comment": "Binning of observations by date, where date is in milliseconds. Default is 1 day (1000 * 60 * 60 * 24). This should never be less than a day. This is passed to the bin transform of cases_by_date_and_group"
    },
    { "name": "yField", "value": "cases_norm" },
    { "name": "yLabel", "value": "% Sequences" },
    {
      "name": "clear",
      "value": true,
      "comment": "If clicking on anything but a grouped bar, then clear the selection (by clearing the 'selection' data object)",
      "on": [
        {
          "events": "mouseup[!event.item]",
          "update": "true",
          "force": true
        }
      ]
    },
    {
      "name": "shift",
      "value": false,
      "comment": "Track whether or not the shift key is pressed. Used to select multiple groups by holding down shift before clicking",
      "on": [
        {
          "events": {
            "merge": [
              { "markname": "locationlines", "type": "click" },
              { "markname": "locationdots", "type": "click" }
            ]
          },
          "update": "event.shiftKey",
          "force": true
        }
      ]
    },
    {
      "name": "clicked",
      "value": null,
      "comment": "Track clicks on the group bars, for selection purposes",
      "on": [
        {
          "events": {
            "merge": [
              { "markname": "locationlines", "type": "click" },
              { "markname": "locationdots", "type": "click" }
            ]
          },
          "update": "{location: datum.location}",
          "force": true
        }
      ]
    }
  ],

  "data": [
    {
      "name": "selectedGroups",
      "values": [{ "group": "B.1" }, { "group": "B.1.3" }]
    },
    {
      "name": "location_data",
      "format": {
        "parse": {
          "location": "string",
          "cases_sum": "number",
          "location_counts": "number",
          "date": "date:'%Q'"
        }
      },
      "transform": [
        {
          "comment": "Bin observations by date. The width of each bin is determined by the signal dateBin. Since the most detail in the date from GISAID is by day, the bin shouldn't ever be smaller than a day.",
          "type": "bin",
          "field": "date",
          "extent": [
            { "signal": "dateRangeStart" },
            { "signal": "dateRangeEnd" }
          ],
          "step": { "signal": "dateBin" },
          "as": ["day_start", "day_end"]
        },
        {
          "type": "joinaggregate",
          "groupby": ["location", "day_start"],
          "fields": ["cases_sum"],
          "ops": ["sum"],
          "as": ["all_cases_sum"]
        },
        {
          "type": "filter",
          "expr": "indata('selectedGroups', 'group', datum.group)"
        },
        {
          "type": "aggregate",
          "groupby": ["location", "day_start"],
          "fields": ["cases_sum", "color", "all_cases_sum"],
          "ops": ["sum", "max", "max"],
          "as": ["cases_sum", "color", "all_cases_sum"]
        },
        {
          "type": "collect",
          "sort": {
            "field": ["day_start"],
            "order": ["ascending"]
          }
        },
        {
          "type": "formula",
          "expr": "datum.cases_sum / datum.all_cases_sum",
          "as": "cases_norm"
        },
        {
          "comment": "Recalculate the day_end from the day_start and dateBin, since the imputation can't work on more than one field at once.",
          "type": "formula",
          "expr": "datum.day_start + dateBin",
          "as": "day_end"
        },
        {
          "type": "formula",
          "expr": "datum.day_start + (dateBin / 2)",
          "as": "day_middle"
        }
      ]
    },
    {
      "name": "selected",
      "comment": "A list of groups that are selected",
      "on": [
        { "trigger": "clear", "remove": true },
        { "trigger": "!shift", "remove": true },
        { "trigger": "!shift && clicked", "insert": "clicked" },
        { "trigger": "shift && clicked", "toggle": "clicked" }
      ]
    }
  ],

  "scales": [
    {
      "name": "xscale",
      "type": "time",
      "range": "width",
      "domain": {
        "fields": [
          { "data": "location_data", "field": "day_start" },
          { "data": "location_data", "field": "day_end" }
        ]
      }
    },
    {
      "name": "yscale",
      "type": "linear",
      "range": "height",
      "nice": true,
      "zero": true,
      "domain": { "data": "location_data", "field": { "signal": "yField" } }
    },
    {
      "name": "color",
      "type": "ordinal",
      "range": "category",
      "domain": { "data": "location_data", "field": "location" }
    }
  ],

  "axes": [
    {
      "orient": "bottom",
      "scale": "xscale",
      "format": "%m-%d",
      "zindex": 0,

      "grid": true,
      "gridScale": "yscale",
      "gridColor": "#DDD",

      "labelAngle": 310,
      "labelAlign": "right",
      "labelBaseline": "middle",
      "labelPadding": 5,

      "title": "Collection Date",
      "titleFontSize": 14,
      "titlePadding": 8
    },
    {
      "orient": "left",
      "scale": "yscale",

      "grid": true,
      "gridScale": "xscale",
      "gridColor": "#DDD",

      "labelFontSize": 14,
      "labelPadding": 4,

      "title": { "signal": "yLabel" },
      "titleFontSize": 14,
      "titlePadding": 10
    }
  ],

  "marks": [
    {
      "type": "group",
      "from": {
        "facet": {
          "name": "series",
          "data": "location_data",
          "groupby": "location"
        }
      },
      "marks": [
        {
          "name": "locationlines",
          "type": "line",
          "from": { "data": "series" },
          "encode": {
            "enter": {
              "strokeWidth": { "value": 3 },
              "strokeMiterLimit": { "value": 2 },
              "strokeCap": { "value": "round" }
            },
            "update": {
              "interpolate": { "signal": "interpolate" },
              "x": { "scale": "xscale", "field": "day_middle" },
              "y": { "scale": "yscale", "field": { "signal": "yField" } },
              "stroke": [
                {
                  "test": "(!length(data('selected')) || indata('selected', 'location', datum.location)) && (datum.cases_sum > 0)",
                  "scale": "color",
                  "field": "location"
                },
                { "value": "#CCC" }
              ],
              "strokeOpacity": [
                {
                  "test": "hoverLocation && hoverLocation.location == datum.location",
                  "value": 0.6
                },
                { "value": 1.0 }
              ],
              "zindex": [
                {
                  "test": "hoverLocation && hoverLocation.location == datum.location",
                  "value": 3
                },
                { "value": 1 }
              ]
            }
          }
        },
        {
          "name": "locationdots",
          "type": "symbol",
          "from": { "data": "series" },
          "encode": {
            "enter": {
              "size": { "value": 30 },
              "fill": { "value": "#fff" },
              "strokeWidth": { "value": 1.5 },
              "tooltip": {
                "signal": "{title: datum.location, 'Sequences': datum[yField], 'Collection date': timeFormat(datum.day_start, '%b %d %Y')}"
              }
            },
            "update": {
              "x": { "scale": "xscale", "field": "day_middle" },
              "y": { "scale": "yscale", "field": { "signal": "yField" } },
              "stroke": [
                {
                  "test": "(!length(data('selected')) || indata('selected', 'location', datum.location)) && (datum.cases_sum > 0)",
                  "scale": "color",
                  "field": "location"
                },
                { "value": "#CCC" }
              ],
              "strokeOpacity": [
                {
                  "test": "hoverLocation && hoverLocation.location == datum.location",
                  "value": 0.6
                },
                { "value": 1.0 }
              ],
              "zindex": [
                {
                  "test": "hoverLocation && hoverLocation.location == datum.location",
                  "value": 3
                },
                { "value": 1 }
              ]
            }
          }
        }
      ]
    }
  ]
}
