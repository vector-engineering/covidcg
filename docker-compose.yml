version: "3.7"

services:
  server:
    build:
      context: ./
      dockerfile: ./services/server/dev.Dockerfile
    environment:
      - LOGINS=user1:pass1,user2:pass2
      - FLASK_APP=cg_server/main.py
      - FLASK_ENV=development
      - CONFIGFILE=/opt/config/config_genbank.yaml
      - DATA_PATH=/data
      - STATIC_DATA_PATH=/opt/static_data
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=cg
      - POSTGRES_DB=cg_dev
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_MAX_CONN=20
    # command: "gunicorn --bind :5000 --workers 1 --threads 8 --timeout 0 cg_server.main:app"
    command: "flask run --host 0.0.0.0 --port=5000"
    ports:
      - 5000:5000
    working_dir: /app
    volumes:
      - ./services/server:/app:cached # Mount the server python code at run-time, so that the flask development server can refresh on changes
      - ./example_data_genbank:/data:cached # Mount the data at run-time (for database seeding only). Should prevent sending all the data over unnecessarily at build-time
      - ./src/constants:/opt/constants:cached
      - ./config:/opt/config:cached
      - ./static_data:/opt/static_data:cached
    depends_on:
      - db
  db:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=cg
      - POSTGRES_DB=cg_dev
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_MAX_CONN=20
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports: # Expose 5432 so we can use DB administration tools
      - 5432:5432
  frontend:
    build:
      context: ./
      dockerfile: ./services/frontend/Dockerfile
    environment:
      CONFIGFILE: /app/config/config_genbank.yaml
    working_dir: /app
    volumes:
      - ./src:/app/src:cached # Mount the JS code at run-time, so the babel server can recompile the app on file changes
      - ./config:/app/config:cached
      - ./static_data:/app/static_data:cached
    command: "npm start -s"
    ports:
      - 3000:3000

volumes:
  postgres_data:
